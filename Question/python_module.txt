1. 파이썬에서 리스트와 튜플의 차이점은 무엇인가요?
2. 파이썬의 주요 기능은 무엇인가요?
3. 파이썬은 어떤 유형의 언어인가요? 프로그래밍인가요, 스크립팅인가요?
4. 파이썬은 해석된 언어입니다. 더 설명해 주시겠어요?
5. PEP 8이란 무엇인가요?
6. 파이썬에서 메모리는 어떻게 관리되나요?
7. 파이썬에서 네임스페이스란 무엇인가요?
8.  파이썬 경로란 무엇인가요?
9. 파이썬 모듈이란 무엇인가요? 파이썬에서 일반적으로 사용되는 내장 모듈의 이름은 무엇인가요?
10. 파이썬에서 지역 변수와 전역 변수는 무엇인가요?
11. 파이썬은 대소문자를 구분하나요?
12. 파이썬에서 타입 변환이란 무엇인가요?
13. 윈도우에 파이썬을 설치하고 경로 변수를 설정하는 방법은 무엇인가요?
14. 파이썬에서 들여쓰기는 필수인가요?
15. 파이썬 array과list의 차이점은 무엇인가요? 
16. 파이썬에서 함수는 무엇인가요?
17. __init__이란 무엇인가요?
18. 람다 함수란 무엇인가요? 
19. 파이썬에서 자식이란 무엇인가요?
20. break, continue, pass work는 어떻게 작동하나요?
21. [::-1] 은 무엇을 하나요?
22. 파이썬에서 목록의 항목을 어떻게 무작위화할 수 있나요?
23. 이터레이터와 이터러블의 차이점은 무엇인가요?
24. 파이썬에서 난수를 생성하려면 어떻게 해야 하나요?
25. range와 xrange의 차이점은 무엇인가요?
26. python에서 주석은 어떻게 작성하나요?
27. pickling과 unpickling이 무엇인가요?
28. 파이썬에서 제너레이터란 무엇인가요?
29. 문자열의 첫 글자는 어떻게 대문자로 표시하나요?
30. 문자열을 모두 소문자로 변환하려면 어떻게 하나요?
31. Python에서 docstrings이란 무엇인가요?
32. 연산자에서 is, not 및 not의 용도는 무엇인가요?
33. Python에서 help() 및 dir() 함수의 용도는 무엇인가요?
34. Python이 종료될 때마다 모든 메모리가 할당 해제되지 않는 이유는 무엇인가요?
35. Python에서 dictionary는 무엇인가요?
36. python에서 삼항 연산자는 어떻게 사용할 수 있나요?
37. *args, **kwargs의 의미와 기능은 무엇인가요? 
38. len()은 어떤 기능을 하나요?
39. 파이썬에서 “re” 모듈의 split(), sub(), subn() 메서드를 설명해 주시겠어요?
40. 음수 인덱스의 의미와 기능은 무엇인가요?
41. 파이썬 패키지란 무엇인가요? 
42. 파이썬에서 파일을 어떻게 삭제하나요?
43. NumPy 배열은 (중첩된) 파이썬 리스트에 비해 어떤 이점이 있나요?
44. 파이썬 배열에 값을 추가하는 방법은 무엇인가요? 
45. 파이썬 배열에 값을 제거하는 방법은 무엇인가요?
46. 파이썬에 OOps 개념이 있나요?
47. Shallow copy와 Deep copy의 차이는 무엇인가요?
48. 파이썬에서 멀티스레딩은 어떻게 이뤄지나요?
49. 파이썬에서 컴파일과 링크의 과정은 무엇인가요?
50. 파이썬 라이브러리가 무엇인지 몇 가지 말씀해 주시겠어요?
51. split()은 언제 사용되나요?
52. 파이썬에서 모듈을 임포트하는 방법은 무엇인가요?
53. 파이썬에서 상속을 예시를 들어 설명해 주시겠어요?
54. 파이썬에서 클래스는 어떻게 생성되나요?
55. 파이썬에서 monkey patching이란 무엇인가요? 
56. 파이썬은 다중 상속을 지원하나요?
57. 파이썬에서 다형성이란 무엇인가요?
58. 파이썬에서 캡슐화는 어떻게 정의하나요? 
59. 파이썬에서 데이터 추상화는 어떻게 하나요?
60. 파이썬은 액세스 지정자를 사용하나요?
61. 파이썬에서 빈 클래스를 생성하는 방법은 무엇인가요?
62. object()의 기능은 무엇인가요?
63. 파이썬의 map 함수란 무엇인가요?
64. 파이썬에서 Numpy는 list보다 좋나요?
65. 파이썬에서 GIL은 무엇인가요?
66. CPython이 Python과 다른 점은 무엇인가요?
67. 파이썬에서 Decorators란 무엇인가요?
68. object interning은 무엇인가요?
69. @classmethod, @staticmethod, @property란 무엇인가요?

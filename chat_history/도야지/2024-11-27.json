[
  {
    "question": "파이썬에서  빈  클래스를  생성하는  방법은  무엇인가요 ?",
    "answer": "파이썬에서 클래스 내부에 아무 내용 없이 선언만 하기 위해서는 pass 나 ... 을 사용할 수 있\n다. 추가적으로 empty class 를 선언한 후, 외부에서 객체를 통해 클래스의 변수나 함수를\n만들 수도 있다.",
    "feedback": "1. 답변의 좋은 점:\n지원자는 빈 클래스를 생성하는 방법에 대해 pass나 ...을 사용할 수 있다고 언급했으며, empty class를 선언한 후 외부에서 객체를 통해 클래스의 변수나 함수를 만들 수 있다고 설명했습니다.\n\n2. 보완이 필요한 점:\n지원자의 답변은 맞는 방법이지만, 좀 더 구체적으로 설명할 필요가 있습니다. 빈 클래스를 생성하는 이유나 사용하는 상황에 대해 더 깊이 있는 이해가 필요합니다.\n\n3. 추가로 언급하면 좋을 내용:\n빈 클래스를 생성하는 경우는 주로 특정 클래스의 인스턴스를 만들어야 하지만, 해당 클래스에는 아직 구현할 내용이 없는 경우에 사용됩니다. 또한, 빈 클래스를 사용하여 나중에 코드를 확장하거나 유지보수하기 쉽게 할 수 있습니다.\n\n4. 개선된 답변 예시:\n파이썬에서 빈 클래스를 생성하는 방법은 pass나 ...을 사용하여 내용이 없는 클래스를 선언할 수 있습니다. 이는 해당 클래스의 구현이 아직 없지만, 나중에 확장할 수 있는 뼈대를 만들어 놓는 것입니다. 또한, 빈 클래스를 사용하여 코드를 보다 모듈화하고 유지보수하기 쉽게 할 수 있습니다.\n\n핵심 키워드: 빈 클래스, pass, 모듈화, 유지보수",
    "context": "Py thon 관 련  면 접  Q&A\n32\n` 파이썬에서  클래스는  어떻게  생성되나요 ?`\nclass 키워드를  사용하여  클래스를  만들  수  있다 . 이  때 , 클래스명  옆  괄호에  상속받을  부모 \n클래스를  설정할  수도  있다 .\n기본적으로  __init__ 이라는  매직  메소드를  통해  멤버  변수들을  세팅할  수  있다 . 자세히는  클\n래스가  객체로  선언될  때 , 멤버  변수의  값을  초기화하는  역할을  담당한다 .\n클래스  내에서는  멤버  함수를  만들  수  있고 , 클래스  객체에서  멤버  함수를  사용할  수  있다 .\nCopy\nclass MyClass():\n    def __init__(self, feature):\n        self.feature = feature\n        ...\n    def my_method(self):\n        ...\n` 파이썬에서  monkey patching 이란  무엇인가요 ?`\n주로  테스트를  위해  많이  사용되는  방법으로 , 어떤  클래스나  모듈의  일부  ( 함수나  변수  등 ) \n를  로컬에서  런타임으로만  instance 를  통해  수정하는  방법을  말한다 .\n예시로  heath.py 파일의  A 클래스에  a 라는  함수가  있는데 , 다른  파일에서  A 를  import 하\n여  a 함수  대신  new_a 를  할당하여  사용하는  방법이  있다 .\nCopy\nfrom heath import A\nA.a = new_a\nmy_A = A() # A 클래스  객체  할당\nmy_A.a # new_a 가  동작\n` 파이썬은  다중  상속을  지원하나요 ?`\n파이썬은  자바와  다르게  multiple inheritance 을  지원한다 . 예시는  아래와  같다 .\nCopy"
  },
  {
    "question": "파이썬에서  제너레이터란  무엇인가요 ?",
    "answer": "제너레이터(Generator)란 Iterator 객체를 간단히 만들 수 있는 함수를 말한다. 제너레이터\n는 다음과 같이 1) yield문과 함수, 2) 표현식 형태로 만들 수 있다.",
    "feedback": "1. 답변의 좋은 점:\n지원자가 제너레이터에 대한 개념을 이해하고 있으며, yield문과 함수, 표현식을 활용하여 제너레이터를 생성할 수 있다는 점이 좋습니다.\n\n2. 보완이 필요한 점:\n제너레이터에 대한 설명이 조금 부족하며, 제너레이터의 동작 원리나 활용 예시에 대한 추가적인 설명이 필요합니다.\n\n3. 추가로 언급하면 좋을 내용:\n- 제너레이터는 값을 한 번에 모두 메모리에 저장하지 않고 필요할 때마다 값을 생성하여 메모리를 효율적으로 관리할 수 있습니다.\n- 제너레이터는 for문과 같은 반복 구조에서 사용되어 코드를 간결하게 작성할 수 있습니다.\n- yield 키워드를 사용하여 값을 반환하고 함수의 실행 상태를 유지하는 동작 방식을 이해하는 것이 중요합니다.\n\n4. 개선된 답변 예시:\n\"제너레이터(Generator)란 Iterator 객체를 간단히 만들 수 있는 함수를 말합니다. 제너레이터는 값을 한 번에 모두 메모리에 저장하지 않고 필요할 때마다 값을 생성하여 메모리를 효율적으로 관리할 수 있습니다. 예를 들어, yield문과 함수, 표현식을 사용하여 제너레이터를 생성할 수 있습니다. 이를 통해 for문과 같은 반복 구조에서 코드를 간결하게 작성할 수 있습니다. 제너레이터는 값을 반환하고 함수의 실행 상태를 유지하는 동작 방식을 이해하는 것이 중요합니다.\"\n\n핵심 키워드: 제너레이터, Iterator 객체, yield문, 메모리 효율, 반복 구조, 함수 실행 상태",
    "context": "Py thon 관 련  면 접  Q&A\n2\n변수 , 인수 (argument) 를  미리  선언하지  않아도  자동으로  메모리  공간  할당되어  편리하\n다 .\n함수 (function) 또는  모듈(module) 추가가  용이하여  확장성과  이식성이  좋다 .\n파이썬은  인터프리터로  동작하는  스크립트  언어이므로  다른  컴파일  언어에  비해  다소  느\n리다 .\n컴파일러가  코드를  기계어로  번역해서  실행가능  파일을  만드는  것에  비해 , 인터프\n리터는  코드를  한줄씩  실행시간마다  번역해서  실행하기  때문이다 .\n` 파이썬은  어떤  유형의  언어인가요 ? 프로그래밍인가요 , 스크립팅인가요 ?` \n파이썬은  정확하게는 , 스크립트  언어이다 . 모든  스크립트  언어는  프로그래밍  언어로  볼  수 \n있으나 , 모든  프로그래밍  언어가  스크립트  언어로  분류되는  것은  아니다 . 따라서  파이썬은 \n스크립트  언어이자 , 프로그래밍  언어이다 . 그러나  사람들은  일반적인  경우에  파이썬을  프로\n그래밍  언어의  목적으로  분류하고 , 프로그래밍  목적으로  많이  사용한다 .\n💡  스크립팅 (scripting/Scripting Language)\n스크립트  언어란  컴파일이  필요없이  실행될  수  있는  명령어의  집합이\n다 . 스크립트  언어는  인터프리터를  사용하는데 , 인터프리터는  컴파일 \n과정이  필요하지  않으며 , 소스코드로  부터  바로  명령어를  해석할  수  있\n다 .\n` 파이썬은  해석된  언어입니다 . 더  설명해  주시겠어요 ?`\n인터프리터는  고급  언어로  작성된  원시코드  명령어들을  한번에  한  줄씩  읽어들여서  실행하\n는  프로그램이다 . 인터프리터  언어는  실행시간 (runtime) 전에  기계  레벨  코드 (machine-\nlevel code) 를  만드는  컴파일  언어와  다르게  소스코드를  바로  실행하는  언어이며 , 파이썬은 \n인터프리터  언어에  해당한다 ."
  }
]